name: Java CI with Maven

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node 22
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B install --file pom.xml
    - name: PMD with Maven
      run: mvn pmd:pmd --file pom.xml

  test-mssql:
    runs-on: ubuntu-latest
    needs: build
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: veryStrong123
        ports:
          - 1433:1433
        options: >-
          --health-cmd "echo 'SELECT 1' | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P veryStrong123"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MSSQL
        run: |
          for i in {1..10}; do
            sleep $((11 - i))
            if echo "SELECT 1" | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P veryStrong123 &> /dev/null; then
              echo "MSSQL is ready!"
              break
            fi
            echo "Waiting for MSSQL to be ready..."
          done

      - name: Run Core Module Tests
        run: mvn test -pl core -am -Dspring.profiles.active=mysql


  java-doc:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write  # if you have a protection rule on your repository, you'll need to give write permission to the workflow.
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Deploy JavaDoc ðŸš€
        uses: MathieuSoysal/Javadoc-publisher.yml@v2.5.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          javadoc-branch: javadoc
          java-version: 21
          target-folder: javadoc-core # url will be https://<username>.github.io/<repo>/javadoc-core
          project: maven # or gradle

  maven-deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node 22
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Deploy Nexus
      run: mvn -B source:jar javadoc:jar deploy --file pom.xml -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
